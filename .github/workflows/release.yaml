name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version. Should be semver. Example "1.2.3"'
        required: true
        type: string

permissions:
  packages: write
  contents: write

env:
  DOCKER_IMAGE_NAME: ghcr.io/your-ko/link-validator
  YQ_VERSION: v4.44.3

jobs:
  Release:
    name: Release
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: SetUp
        run: |
          git config --local user.name  "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install yq
        run: |
          curl -sSL https://github.com/mikefarah/yq/releases/download/${{env.YQ_VERSION}}/yq_linux_amd64 -o yq
          sudo mv yq /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - uses: actions/setup-go@v6.0.0
        with:
          go-version-file: './go.mod'
          cache-dependency-path: './go.sum'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Docker login
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build metadata
        id: meta
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "GIT_COMMIT=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Test
        shell: bash
        run: |
          CGO_ENABLED=1 go test -race ./cmd/... ./internal/... ./pkg/...

      - name: Go mod tidy
        run: |
          go mod tidy

      - name: Set version
        shell: bash
        run: |
          yq '.runs.steps[0].env.DOCKER_VALIDATOR_VERSION = "${{ inputs.version }}"' -i action.yml
          echo "New value:" && yq '.runs.steps[0].env.DOCKER_VALIDATOR_VERSION' action.yml
          yq '.env.DOCKER_VALIDATOR_VERSION = "${{ inputs.version }}"' -i .github/workflows/link-validator.yaml
          echo "New value:" && yq '.env.DOCKER_VALIDATOR_VERSION' .github/workflows/link-validator.yaml
          yq '.env.DOCKER_VALIDATOR_VERSION = "${{ inputs.version }}"' -i .github/workflows/link-validator-workflow.yaml
          echo "New value:" && yq '.env.DOCKER_VALIDATOR_VERSION' .github/workflows/link-validator-workflow.yaml

      - name: Commit changes
        shell: bash
        env:
          TOKEN: ${{ secrets.PAT }}
        run: |
          set -e
          
          git add action.yml
          git add .github/workflows/link-validator.yaml
          git add .github/workflows/link-validator-workflow.yaml
          git add go.mod
          git add go.sum
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Releasing: Set version to ${{ inputs.version }}. Go mod tidy"
          fi

          git remote set-url origin "https://x-access-token:${TOKEN}@github.com/your-ko/link-validator.git"
          git push origin HEAD:main

      - name: Build image
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          file: Dockerfile
          build-args: |
            VERSION=${{ inputs.version }}
            BUILD_DATE=${{ steps.meta.outputs.BUILD_DATE }}
            GIT_COMMIT=${{ steps.meta.outputs.GIT_COMMIT }}
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ inputs.version }},${{ env.DOCKER_IMAGE_NAME }}:latest
          provenance: false
          push: true

      - uses: ncipollo/release-action@v1.20.0
        id: release
        with:
          tag: ${{ inputs.version }}
          generateReleaseNotes: true
          makeLatest: true

